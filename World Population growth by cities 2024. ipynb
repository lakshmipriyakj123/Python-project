{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1gYuhBOu9QUF_xCsitKgryJNvTKUrlLOS","timestamp":1737403199801}],"authorship_tag":"ABX9TyNzzAFkDihze39mVe5GK3lE"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"mFQALv1ApqvB","executionInfo":{"status":"ok","timestamp":1737405166610,"user_tz":-330,"elapsed":465,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"acb64073-efe3-40d8-d464-20630ce91022"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["            City     Country      Continent  Population (2024)  \\\n","0          Tokyo       Japan           Asia           37115035   \n","1          Delhi       India           Asia           33807403   \n","2       Shanghai       China           Asia           29867918   \n","3          Dhaka  Bangladesh           Asia           23935652   \n","4      Sao Paulo      Brazil  South America           22806704   \n","..           ...         ...            ...                ...   \n","94       Shantou       China           Asia            4656525   \n","95    New Taipei      Taiwan           Asia            4534877   \n","96      Tel Aviv      Israel           Asia            4495727   \n","97          Kano     Nigeria         Africa            4490734   \n","98  Shijiazhuang       China           Asia            4454132   \n","\n","    Population (2023)  Growth Rate  \n","0            37194105      -0.0021  \n","1            32941309       0.0263  \n","2            29210808       0.0225  \n","3            23209616       0.0313  \n","4            22619736       0.0083  \n","..                ...          ...  \n","94            4573713       0.0181  \n","95            4504147       0.0068  \n","96            4420855       0.0169  \n","97            4348481       0.0327  \n","98            4370473       0.0191  \n","\n","[99 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-607b7354-78fd-4dc0-8a98-f7b8abb069dc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>City</th>\n","      <th>Country</th>\n","      <th>Continent</th>\n","      <th>Population (2024)</th>\n","      <th>Population (2023)</th>\n","      <th>Growth Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Tokyo</td>\n","      <td>Japan</td>\n","      <td>Asia</td>\n","      <td>37115035</td>\n","      <td>37194105</td>\n","      <td>-0.0021</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Delhi</td>\n","      <td>India</td>\n","      <td>Asia</td>\n","      <td>33807403</td>\n","      <td>32941309</td>\n","      <td>0.0263</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Shanghai</td>\n","      <td>China</td>\n","      <td>Asia</td>\n","      <td>29867918</td>\n","      <td>29210808</td>\n","      <td>0.0225</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dhaka</td>\n","      <td>Bangladesh</td>\n","      <td>Asia</td>\n","      <td>23935652</td>\n","      <td>23209616</td>\n","      <td>0.0313</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Sao Paulo</td>\n","      <td>Brazil</td>\n","      <td>South America</td>\n","      <td>22806704</td>\n","      <td>22619736</td>\n","      <td>0.0083</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>Shantou</td>\n","      <td>China</td>\n","      <td>Asia</td>\n","      <td>4656525</td>\n","      <td>4573713</td>\n","      <td>0.0181</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>New Taipei</td>\n","      <td>Taiwan</td>\n","      <td>Asia</td>\n","      <td>4534877</td>\n","      <td>4504147</td>\n","      <td>0.0068</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>Tel Aviv</td>\n","      <td>Israel</td>\n","      <td>Asia</td>\n","      <td>4495727</td>\n","      <td>4420855</td>\n","      <td>0.0169</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>Kano</td>\n","      <td>Nigeria</td>\n","      <td>Africa</td>\n","      <td>4490734</td>\n","      <td>4348481</td>\n","      <td>0.0327</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>Shijiazhuang</td>\n","      <td>China</td>\n","      <td>Asia</td>\n","      <td>4454132</td>\n","      <td>4370473</td>\n","      <td>0.0191</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>99 rows Ã— 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-607b7354-78fd-4dc0-8a98-f7b8abb069dc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-607b7354-78fd-4dc0-8a98-f7b8abb069dc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-607b7354-78fd-4dc0-8a98-f7b8abb069dc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c041c11e-2c5d-44f6-838d-a1306f536ffb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c041c11e-2c5d-44f6-838d-a1306f536ffb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c041c11e-2c5d-44f6-838d-a1306f536ffb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4d77059f-6cc9-42f0-be1b-fc1d8cdb6549\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cc')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4d77059f-6cc9-42f0-be1b-fc1d8cdb6549 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cc');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cc","summary":"{\n  \"name\": \"cc\",\n  \"rows\": 99,\n  \"fields\": [\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 99,\n        \"samples\": [\n          \"Belo Horizonte\",\n          \"Xi An Shaanxi\",\n          \"New Taipei\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 45,\n        \"samples\": [\n          \"Kenya\",\n          \"Tanzania\",\n          \"United States\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Continent\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Asia\",\n          \"South America\",\n          \"Oceana\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population (2024)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6507634,\n        \"min\": 4454132,\n        \"max\": 37115035,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          6300409,\n          9013837,\n          4534877\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population (2023)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6411106,\n        \"min\": 4348481,\n        \"max\": 37194105,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          6247889,\n          8785174,\n          4504147\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Growth Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.011582538357596525,\n        \"min\": -0.0249,\n        \"max\": 0.0496,\n        \"num_unique_values\": 90,\n        \"samples\": [\n          0.0152,\n          0.0183,\n          0.0312\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}],"source":["import pandas as pd\n","cc = pd.read_excel(\"World population growth by cities 2024.xlsx\")\n","cc"]},{"cell_type":"code","source":["cc.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PHyRHOsmpxmq","executionInfo":{"status":"ok","timestamp":1721465483569,"user_tz":-330,"elapsed":578,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"526cc88b-c5bc-4e74-ad34-e2b1f7ec873f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(99, 7)"]},"metadata":{},"execution_count":126}]},{"cell_type":"code","source":["cc.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"YSqUJKPySANu","executionInfo":{"status":"ok","timestamp":1737405180498,"user_tz":-330,"elapsed":537,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"0b74cc4e-f3ff-45a6-f1f9-c37291ebf75b"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Population (2024)  Population (2023)  Growth Rate\n","count       9.900000e+01       9.900000e+01    99.000000\n","mean        1.018489e+07       1.000264e+07     0.018897\n","std         6.507634e+06       6.411106e+06     0.011583\n","min         4.454132e+06       4.348481e+06    -0.024900\n","25%         5.561440e+06       5.475431e+06     0.012550\n","50%         7.921134e+06       7.711305e+06     0.019100\n","75%         1.238300e+07       1.222827e+07     0.025350\n","max         3.711504e+07       3.719410e+07     0.049600"],"text/html":["\n","  <div id=\"df-4e313efd-6f0d-4da6-9fa8-e7c654dc4495\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Population (2024)</th>\n","      <th>Population (2023)</th>\n","      <th>Growth Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>9.900000e+01</td>\n","      <td>9.900000e+01</td>\n","      <td>99.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.018489e+07</td>\n","      <td>1.000264e+07</td>\n","      <td>0.018897</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>6.507634e+06</td>\n","      <td>6.411106e+06</td>\n","      <td>0.011583</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>4.454132e+06</td>\n","      <td>4.348481e+06</td>\n","      <td>-0.024900</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>5.561440e+06</td>\n","      <td>5.475431e+06</td>\n","      <td>0.012550</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>7.921134e+06</td>\n","      <td>7.711305e+06</td>\n","      <td>0.019100</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.238300e+07</td>\n","      <td>1.222827e+07</td>\n","      <td>0.025350</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>3.711504e+07</td>\n","      <td>3.719410e+07</td>\n","      <td>0.049600</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e313efd-6f0d-4da6-9fa8-e7c654dc4495')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4e313efd-6f0d-4da6-9fa8-e7c654dc4495 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4e313efd-6f0d-4da6-9fa8-e7c654dc4495');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eaba4889-33ad-42ae-a85a-33aebed63569\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eaba4889-33ad-42ae-a85a-33aebed63569')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eaba4889-33ad-42ae-a85a-33aebed63569 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"cc\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Population (2024)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11375301.577906435,\n        \"min\": 99.0,\n        \"max\": 37115035.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          10184892.97979798,\n          7921134.0,\n          99.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population (2023)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11424231.202883022,\n        \"min\": 99.0,\n        \"max\": 37194105.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          10002635.696969697,\n          7711305.0,\n          99.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Growth Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34.996125745779864,\n        \"min\": -0.0249,\n        \"max\": 99.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.018896969696969693,\n          0.0191,\n          99.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["cc.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GxQOS0YjSPkH","executionInfo":{"status":"ok","timestamp":1737405183900,"user_tz":-330,"elapsed":14,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"22c7e3b5-f2b6-411f-b0dc-fc0efe0099c2"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 99 entries, 0 to 98\n","Data columns (total 6 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   City               99 non-null     object \n"," 1   Country            99 non-null     object \n"," 2   Continent          99 non-null     object \n"," 3   Population (2024)  99 non-null     int64  \n"," 4   Population (2023)  99 non-null     int64  \n"," 5   Growth Rate        99 non-null     float64\n","dtypes: float64(1), int64(2), object(3)\n","memory usage: 4.8+ KB\n"]}]},{"cell_type":"code","source":["cc.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"qQFHvDi_SGpn","executionInfo":{"status":"ok","timestamp":1737405186728,"user_tz":-330,"elapsed":20,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"39bb6d46-0137-4c4e-a31b-e1f54c3f74df"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["City                 0\n","Country              0\n","Continent            0\n","Population (2024)    0\n","Population (2023)    0\n","Growth Rate          0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>City</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Country</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Continent</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Population (2024)</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Population (2023)</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Growth Rate</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["cc.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"oLkeG13iTQzF","executionInfo":{"status":"ok","timestamp":1737405191140,"user_tz":-330,"elapsed":942,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"3590688f-2205-44ac-a873-ae67436156e5"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        City     Country      Continent  Population (2024)  Population (2023)  \\\n","0      Tokyo       Japan           Asia           37115035           37194105   \n","1      Delhi       India           Asia           33807403           32941309   \n","2   Shanghai       China           Asia           29867918           29210808   \n","3      Dhaka  Bangladesh           Asia           23935652           23209616   \n","4  Sao Paulo      Brazil  South America           22806704           22619736   \n","\n","   Growth Rate  \n","0      -0.0021  \n","1       0.0263  \n","2       0.0225  \n","3       0.0313  \n","4       0.0083  "],"text/html":["\n","  <div id=\"df-38e7ed95-20a1-4c56-914b-9b572d56623a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>City</th>\n","      <th>Country</th>\n","      <th>Continent</th>\n","      <th>Population (2024)</th>\n","      <th>Population (2023)</th>\n","      <th>Growth Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Tokyo</td>\n","      <td>Japan</td>\n","      <td>Asia</td>\n","      <td>37115035</td>\n","      <td>37194105</td>\n","      <td>-0.0021</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Delhi</td>\n","      <td>India</td>\n","      <td>Asia</td>\n","      <td>33807403</td>\n","      <td>32941309</td>\n","      <td>0.0263</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Shanghai</td>\n","      <td>China</td>\n","      <td>Asia</td>\n","      <td>29867918</td>\n","      <td>29210808</td>\n","      <td>0.0225</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dhaka</td>\n","      <td>Bangladesh</td>\n","      <td>Asia</td>\n","      <td>23935652</td>\n","      <td>23209616</td>\n","      <td>0.0313</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Sao Paulo</td>\n","      <td>Brazil</td>\n","      <td>South America</td>\n","      <td>22806704</td>\n","      <td>22619736</td>\n","      <td>0.0083</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38e7ed95-20a1-4c56-914b-9b572d56623a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-38e7ed95-20a1-4c56-914b-9b572d56623a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-38e7ed95-20a1-4c56-914b-9b572d56623a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1d25d3fe-2824-4632-ba8f-b7e4eaa3c559\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d25d3fe-2824-4632-ba8f-b7e4eaa3c559')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1d25d3fe-2824-4632-ba8f-b7e4eaa3c559 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cc","summary":"{\n  \"name\": \"cc\",\n  \"rows\": 99,\n  \"fields\": [\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 99,\n        \"samples\": [\n          \"Belo Horizonte\",\n          \"Xi An Shaanxi\",\n          \"New Taipei\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 45,\n        \"samples\": [\n          \"Kenya\",\n          \"Tanzania\",\n          \"United States\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Continent\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Asia\",\n          \"South America\",\n          \"Oceana\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population (2024)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6507634,\n        \"min\": 4454132,\n        \"max\": 37115035,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          6300409,\n          9013837,\n          4534877\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population (2023)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6411106,\n        \"min\": 4348481,\n        \"max\": 37194105,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          6247889,\n          8785174,\n          4504147\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Growth Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.011582538357596525,\n        \"min\": -0.0249,\n        \"max\": 0.0496,\n        \"num_unique_values\": 90,\n        \"samples\": [\n          0.0152,\n          0.0183,\n          0.0312\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["import matplotlib\n","import matplotlib.pyplot as plt"],"metadata":{"id":"NYv1y6-GtMEk","executionInfo":{"status":"ok","timestamp":1737405194235,"user_tz":-330,"elapsed":7,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["x=cc[\"City\"]\n","y=cc[\"Growth Rate\"]\n","plt.plot(x, y, \"o\")\n","plt.xlabel(\"City\")\n","plt.ylabel(\"Growth Rate\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"rP24IAsOS5sg","executionInfo":{"status":"ok","timestamp":1721464903756,"user_tz":-330,"elapsed":1678,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"c01df381-8dff-4809-b91e-98e9d1174f52"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["x=cc[\"City\"]\n","y=cc[\"Rank\"]\n","plt.plot(x, y, \"o\")\n","plt.xlabel(\"City\")\n","plt.ylabel(\"Rank\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":232},"id":"n6gHWr9AtQFG","executionInfo":{"status":"ok","timestamp":1721454995187,"user_tz":-330,"elapsed":1398,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"d11c0d5a-ce92-47bd-f302-5dc14f786ad3"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["x=cc[\"City\"]\n","y=cc[\"Population (2024)\"]\n","plt.plot(x, y, \"o\")\n","plt.xlabel(\"City\")\n","plt.ylabel(\"Population (2024)\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"dyXN5UpZSXrQ","executionInfo":{"status":"ok","timestamp":1721464910181,"user_tz":-330,"elapsed":1463,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"5b59da0b-112c-458b-9c48-654ba143081d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["x=cc[\"City\"]\n","y=cc[\"Population (2023)\"]\n","plt.plot(x, y, \"o\")\n","plt.xlabel(\"City\")\n","plt.ylabel(\"Population (2023)\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"9Va0hLKYSmUh","executionInfo":{"status":"ok","timestamp":1721464841050,"user_tz":-330,"elapsed":1442,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"3bd8a473-cc6e-4522-e53c-78d3e4ca77f2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["cc.hist()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":257},"id":"mCZVQAZcArLy","executionInfo":{"status":"ok","timestamp":1721459992215,"user_tz":-330,"elapsed":2716,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"36072603-cf93-4420-9676-ca99292ad1ac"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","cc = pd.DataFrame({\n","    'City': ['New York', 'Los Angeles', 'Chicago'],\n","    'Country': ['USA', 'USA', 'USA'],\n","    'Continent': ['North America', 'North America', 'North America'],\n","    'Rank': [1, 2, 3],\n","    'Population (2024)': [8419000, 3980000, 2716000],\n","    'Population (2023)': [8337000, 3967000, 2705000],\n","    'Growth Rate': [0.01, 0.03, 0.01]\n","})"],"metadata":{"id":"BRbvJrL_QL7E","executionInfo":{"status":"ok","timestamp":1737405205847,"user_tz":-330,"elapsed":543,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["cc['City'] = cc['City'].astype('category')\n","cc['Country'] = cc['Country'].astype('category')\n","cc['Continent'] = cc['Continent'].astype\n","cc['Rank'] = cc['Rank'].astype('int32')\n","cc['Population (2024)'] = cc['Population (2024)'].astype('int32')\n","cc['Population (2023)'] = cc['Population (2023)'].astype('int32')\n","cc['Growth Rate'] = cc['Growth Rate']"],"metadata":{"id":"9nu85JWWQblS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(cc.dtypes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yUPsHH7xRLMf","executionInfo":{"status":"ok","timestamp":1721464308221,"user_tz":-330,"elapsed":610,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"d7663eeb-ca0f-4284-8dea-78a4cc61b415"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["City                 category\n","Country              category\n","Continent              object\n","Rank                    int32\n","Population (2024)       int32\n","Population (2023)       int32\n","Growth Rate           float64\n","dtype: object\n"]}]},{"cell_type":"code","source":["correlation = cc['Population (2024)'].corr(cc['Growth Rate'])\n","print(f'Correlation between Population (2024) and Growth Rate: {correlation}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NK-Jj_tL_2LP","executionInfo":{"status":"ok","timestamp":1737405215383,"user_tz":-330,"elapsed":531,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"3c79a6e8-4bd0-4b68-974b-8a0dbf0479d6"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Correlation between Population (2024) and Growth Rate: -0.3060061485785318\n"]}]},{"cell_type":"code","source":["correlation = cc['Population (2023)'].corr(cc['Growth Rate'])\n","print(f'Correlation between Population (2023) and Growth Rate: {correlation}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fSfa7tzo_4oc","executionInfo":{"status":"ok","timestamp":1737405217945,"user_tz":-330,"elapsed":12,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"ccf379e7-1b84-4915-f0f6-50882d26f0db"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Correlation between Population (2023) and Growth Rate: -0.30357304601754465\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression"],"metadata":{"id":"dVm2aExUA6qH","executionInfo":{"status":"ok","timestamp":1737405222693,"user_tz":-330,"elapsed":2952,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","cc = pd.read_excel(\"World population growth rate by cities 2024.xlsx\")\n","cc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"hKkvvUrKBBzo","executionInfo":{"status":"ok","timestamp":1721460104091,"user_tz":-330,"elapsed":1015,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"352ed34d-8472-41ca-effe-11dc5f0e7b37"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            City     Country      Continent  Rank  Population (2024)  \\\n","0          Tokyo       Japan           Asia     1           37115035   \n","1          Delhi       India           Asia     2           33807403   \n","2       Shanghai       China           Asia     3           29867918   \n","3          Dhaka  Bangladesh           Asia     4           23935652   \n","4      Sao Paulo      Brazil  South America     5           22806704   \n","..           ...         ...            ...   ...                ...   \n","94       Shantou       China           Asia    95            4656525   \n","95    New Taipei      Taiwan           Asia    96            4534877   \n","96      Tel Aviv      Israel           Asia    97            4495727   \n","97          Kano     Nigeria         Africa    98            4490734   \n","98  Shijiazhuang       China           Asia    99            4454132   \n","\n","    Population (2023)  Growth Rate  \n","0            37194105      -0.0021  \n","1            32941309       0.0263  \n","2            29210808       0.0225  \n","3            23209616       0.0313  \n","4            22619736       0.0083  \n","..                ...          ...  \n","94            4573713       0.0181  \n","95            4504147       0.0068  \n","96            4420855       0.0169  \n","97            4348481       0.0327  \n","98            4370473       0.0191  \n","\n","[99 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-aeb45a0d-053b-430a-8548-5f8a4466c4cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>City</th>\n","      <th>Country</th>\n","      <th>Continent</th>\n","      <th>Rank</th>\n","      <th>Population (2024)</th>\n","      <th>Population (2023)</th>\n","      <th>Growth Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Tokyo</td>\n","      <td>Japan</td>\n","      <td>Asia</td>\n","      <td>1</td>\n","      <td>37115035</td>\n","      <td>37194105</td>\n","      <td>-0.0021</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Delhi</td>\n","      <td>India</td>\n","      <td>Asia</td>\n","      <td>2</td>\n","      <td>33807403</td>\n","      <td>32941309</td>\n","      <td>0.0263</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Shanghai</td>\n","      <td>China</td>\n","      <td>Asia</td>\n","      <td>3</td>\n","      <td>29867918</td>\n","      <td>29210808</td>\n","      <td>0.0225</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dhaka</td>\n","      <td>Bangladesh</td>\n","      <td>Asia</td>\n","      <td>4</td>\n","      <td>23935652</td>\n","      <td>23209616</td>\n","      <td>0.0313</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Sao Paulo</td>\n","      <td>Brazil</td>\n","      <td>South America</td>\n","      <td>5</td>\n","      <td>22806704</td>\n","      <td>22619736</td>\n","      <td>0.0083</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>Shantou</td>\n","      <td>China</td>\n","      <td>Asia</td>\n","      <td>95</td>\n","      <td>4656525</td>\n","      <td>4573713</td>\n","      <td>0.0181</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>New Taipei</td>\n","      <td>Taiwan</td>\n","      <td>Asia</td>\n","      <td>96</td>\n","      <td>4534877</td>\n","      <td>4504147</td>\n","      <td>0.0068</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>Tel Aviv</td>\n","      <td>Israel</td>\n","      <td>Asia</td>\n","      <td>97</td>\n","      <td>4495727</td>\n","      <td>4420855</td>\n","      <td>0.0169</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>Kano</td>\n","      <td>Nigeria</td>\n","      <td>Africa</td>\n","      <td>98</td>\n","      <td>4490734</td>\n","      <td>4348481</td>\n","      <td>0.0327</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>Shijiazhuang</td>\n","      <td>China</td>\n","      <td>Asia</td>\n","      <td>99</td>\n","      <td>4454132</td>\n","      <td>4370473</td>\n","      <td>0.0191</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>99 rows Ã— 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aeb45a0d-053b-430a-8548-5f8a4466c4cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-aeb45a0d-053b-430a-8548-5f8a4466c4cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-aeb45a0d-053b-430a-8548-5f8a4466c4cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-72a35f1c-6abd-4b63-8968-647ab1bce3ba\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-72a35f1c-6abd-4b63-8968-647ab1bce3ba')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-72a35f1c-6abd-4b63-8968-647ab1bce3ba button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f663c0ad-d871-4d29-98ce-8c4de4d30510\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cc')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f663c0ad-d871-4d29-98ce-8c4de4d30510 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cc');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cc","summary":"{\n  \"name\": \"cc\",\n  \"rows\": 99,\n  \"fields\": [\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 99,\n        \"samples\": [\n          \"Belo Horizonte\",\n          \"Xi An Shaanxi\",\n          \"New Taipei\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 45,\n        \"samples\": [\n          \"Kenya\",\n          \"Tanzania\",\n          \"United States\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Continent\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Asia\",\n          \"South America\",\n          \"Oceana\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          63,\n          41,\n          96\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population (2024)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6507634,\n        \"min\": 4454132,\n        \"max\": 37115035,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          6300409,\n          9013837,\n          4534877\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population (2023)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6411106,\n        \"min\": 4348481,\n        \"max\": 37194105,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          6247889,\n          8785174,\n          4504147\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Growth Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.011582538357596525,\n        \"min\": -0.0249,\n        \"max\": 0.0496,\n        \"num_unique_values\": 90,\n        \"samples\": [\n          0.0152,\n          0.0183,\n          0.0312\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["X = cc[['Rank', 'Population (2024)', 'Population (2023)']]\n","y = cc['Growth Rate']"],"metadata":{"id":"vaP06mvPBCcC","executionInfo":{"status":"ok","timestamp":1737405277931,"user_tz":-330,"elapsed":494,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"id":"7jaN2i3NBC7o","executionInfo":{"status":"ok","timestamp":1737405280321,"user_tz":-330,"elapsed":9,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["model = LinearRegression()\n","model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"g-w6ypUSBDVm","executionInfo":{"status":"ok","timestamp":1737405289378,"user_tz":-330,"elapsed":471,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"2f6bf21a-54a5-4f15-da49-40049c1eca97"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"â–¸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"â–¾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LinearRegression</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["y_pred = model.predict(X_test)"],"metadata":{"id":"XnJzLcflBYGs","executionInfo":{"status":"ok","timestamp":1737405291412,"user_tz":-330,"elapsed":12,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["results_cc = pd.DataFrame({\n","    'City': cc.loc[X_test.index, 'City'],\n","    'Predicted Growth Rate': y_pred\n","})"],"metadata":{"id":"cuZOPmq9BeJs","executionInfo":{"status":"ok","timestamp":1737405293823,"user_tz":-330,"elapsed":11,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["print(results_cc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TpH064gHBZC8","executionInfo":{"status":"ok","timestamp":1721460234037,"user_tz":-330,"elapsed":451,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"17668029-a9ad-4071-f47e-c56553e1aaf1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                City  Predicted Growth Rate\n","62    Belo Horizonte               0.014046\n","40     Xi An Shaanxi               0.025189\n","95        New Taipei               0.014709\n","18         Guangzhou               0.021643\n","97              Kano               0.024853\n","84            Urumqi               0.024053\n","64         Singapore               0.013069\n","42             Wuhan               0.016753\n","10         Chongqing               0.027063\n","0              Tokyo              -0.057682\n","31         Hyderabad               0.024871\n","76       Guadalajara               0.017741\n","47     Dar Es Salaam               0.040907\n","26            Bogota               0.013182\n","44          Hangzhou               0.022095\n","4          Sao Paulo              -0.005136\n","22    Rio De Janeiro               0.004108\n","12          Kinshasa               0.054193\n","88           Kunming               0.020506\n","73  Saint Petersburg               0.012275\n"]}]},{"cell_type":"code","source":["from pandas import read_csv\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import accuracy_score\n","from sklearn.svm import SVC"],"metadata":{"id":"Kh9XCBpmUUIy","executionInfo":{"status":"ok","timestamp":1737405298215,"user_tz":-330,"elapsed":477,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","cc = pd.read_excel(\"World population growth rate by cities 2024.xlsx\")\n","cc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"Qhn2mJU0UU28","executionInfo":{"status":"ok","timestamp":1721465152478,"user_tz":-330,"elapsed":487,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"9a81c1e5-acc8-49d9-930e-57381c8e635a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            City     Country      Continent  Rank  Population (2024)  \\\n","0          Tokyo       Japan           Asia     1           37115035   \n","1          Delhi       India           Asia     2           33807403   \n","2       Shanghai       China           Asia     3           29867918   \n","3          Dhaka  Bangladesh           Asia     4           23935652   \n","4      Sao Paulo      Brazil  South America     5           22806704   \n","..           ...         ...            ...   ...                ...   \n","94       Shantou       China           Asia    95            4656525   \n","95    New Taipei      Taiwan           Asia    96            4534877   \n","96      Tel Aviv      Israel           Asia    97            4495727   \n","97          Kano     Nigeria         Africa    98            4490734   \n","98  Shijiazhuang       China           Asia    99            4454132   \n","\n","    Population (2023)  Growth Rate  \n","0            37194105      -0.0021  \n","1            32941309       0.0263  \n","2            29210808       0.0225  \n","3            23209616       0.0313  \n","4            22619736       0.0083  \n","..                ...          ...  \n","94            4573713       0.0181  \n","95            4504147       0.0068  \n","96            4420855       0.0169  \n","97            4348481       0.0327  \n","98            4370473       0.0191  \n","\n","[99 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-da9cee8d-e53c-4f1c-b818-774ef31592dc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>City</th>\n","      <th>Country</th>\n","      <th>Continent</th>\n","      <th>Rank</th>\n","      <th>Population (2024)</th>\n","      <th>Population (2023)</th>\n","      <th>Growth Rate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Tokyo</td>\n","      <td>Japan</td>\n","      <td>Asia</td>\n","      <td>1</td>\n","      <td>37115035</td>\n","      <td>37194105</td>\n","      <td>-0.0021</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Delhi</td>\n","      <td>India</td>\n","      <td>Asia</td>\n","      <td>2</td>\n","      <td>33807403</td>\n","      <td>32941309</td>\n","      <td>0.0263</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Shanghai</td>\n","      <td>China</td>\n","      <td>Asia</td>\n","      <td>3</td>\n","      <td>29867918</td>\n","      <td>29210808</td>\n","      <td>0.0225</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dhaka</td>\n","      <td>Bangladesh</td>\n","      <td>Asia</td>\n","      <td>4</td>\n","      <td>23935652</td>\n","      <td>23209616</td>\n","      <td>0.0313</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Sao Paulo</td>\n","      <td>Brazil</td>\n","      <td>South America</td>\n","      <td>5</td>\n","      <td>22806704</td>\n","      <td>22619736</td>\n","      <td>0.0083</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>Shantou</td>\n","      <td>China</td>\n","      <td>Asia</td>\n","      <td>95</td>\n","      <td>4656525</td>\n","      <td>4573713</td>\n","      <td>0.0181</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>New Taipei</td>\n","      <td>Taiwan</td>\n","      <td>Asia</td>\n","      <td>96</td>\n","      <td>4534877</td>\n","      <td>4504147</td>\n","      <td>0.0068</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>Tel Aviv</td>\n","      <td>Israel</td>\n","      <td>Asia</td>\n","      <td>97</td>\n","      <td>4495727</td>\n","      <td>4420855</td>\n","      <td>0.0169</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>Kano</td>\n","      <td>Nigeria</td>\n","      <td>Africa</td>\n","      <td>98</td>\n","      <td>4490734</td>\n","      <td>4348481</td>\n","      <td>0.0327</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>Shijiazhuang</td>\n","      <td>China</td>\n","      <td>Asia</td>\n","      <td>99</td>\n","      <td>4454132</td>\n","      <td>4370473</td>\n","      <td>0.0191</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>99 rows Ã— 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da9cee8d-e53c-4f1c-b818-774ef31592dc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-da9cee8d-e53c-4f1c-b818-774ef31592dc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-da9cee8d-e53c-4f1c-b818-774ef31592dc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5cc383bd-90ea-4321-afb3-bbb329126a7f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5cc383bd-90ea-4321-afb3-bbb329126a7f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5cc383bd-90ea-4321-afb3-bbb329126a7f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0d750793-5b70-4dd2-ae5c-c1fd38e0f19d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cc')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0d750793-5b70-4dd2-ae5c-c1fd38e0f19d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cc');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cc","summary":"{\n  \"name\": \"cc\",\n  \"rows\": 99,\n  \"fields\": [\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 99,\n        \"samples\": [\n          \"Belo Horizonte\",\n          \"Xi An Shaanxi\",\n          \"New Taipei\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 45,\n        \"samples\": [\n          \"Kenya\",\n          \"Tanzania\",\n          \"United States\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Continent\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Asia\",\n          \"South America\",\n          \"Oceana\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          63,\n          41,\n          96\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population (2024)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6507634,\n        \"min\": 4454132,\n        \"max\": 37115035,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          6300409,\n          9013837,\n          4534877\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population (2023)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6411106,\n        \"min\": 4348481,\n        \"max\": 37194105,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          6247889,\n          8785174,\n          4504147\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Growth Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.011582538357596525,\n        \"min\": -0.0249,\n        \"max\": 0.0496,\n        \"num_unique_values\": 90,\n        \"samples\": [\n          0.0152,\n          0.0183,\n          0.0312\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["array = dataset.values\n","X = array[:,0:4]\n","y = array[:,4]\n","X_train, X_validation, Y_train, Y_validation = train_test_split(X, y, test_size=0.20, random_state=1)"],"metadata":{"id":"aEeYMGxqUVRn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = SVC(gamma='auto')\n","model.fit(X_train, Y_train)\n","predictions = model.predict(X_validation)"],"metadata":{"id":"oe05VzvdUVrv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(accuracy_score(Y_validation, predictions))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uaVobKsiUWEw","executionInfo":{"status":"ok","timestamp":1721465201016,"user_tz":-330,"elapsed":619,"user":{"displayName":"Lakshmipriya K J","userId":"07254684502103000080"}},"outputId":"ea8c1b53-89bf-4420-ff8c-46d0486a34ca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9666666666666667\n"]}]}]}